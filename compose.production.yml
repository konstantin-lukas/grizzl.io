services:
    postgres:
        container_name: grizzl-postgres
        image: postgres:18.0-alpine3.22
        restart: unless-stopped
        environment:
            POSTGRES_PASSWORD: ${DB_ADMIN_PASSWORD}
            POSTGRES_DB: ${DB_NAME}
        volumes:
            - grizzl_database:/var/lib/postgresql/data
            - ./docker/postgres/init:/docker-entrypoint-initdb.d
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 1s
            timeout: 15s
            retries: 10
        networks:
            - grizzl_net

    migrations:
        image: node:24-alpine
        container_name: grizzl-migrations
        depends_on:
            postgres:
                condition: service_healthy
        volumes:
            - .:/home/grizzl
        working_dir: /home/grizzl
        environment:
            DB_HOST: ${DB_HOST}
            DB_ADMIN_USER: ${DB_ADMIN_USERNAME}
            DB_ADMIN_PASSWORD: ${DB_ADMIN_PASSWORD}
            DB_NAME: ${DB_NAME}
        command: npx drizzle-kit migrate
        networks:
            - proxy_net
            - grizzl_net
        restart: "no"

    webserver:
        container_name: grizzl-webserver
        build:
            context: .
            dockerfile: Dockerfile
        environment:
            APP_ENV: production
        restart: unless-stopped
        volumes:
            - .:/home/grizzl
        working_dir: /home/grizzl
        user: "${DOCKER_USER_ID:-1000}:${DOCKER_GROUP_ID:-1000}"
        depends_on:
            postgres:
                condition: service_healthy
            migrations:
                condition: service_completed_successfully
        networks:
            - proxy_net
            - grizzl_net

volumes:
    grizzl_database:

networks:
    proxy_net:
        external: true
    grizzl_net:
