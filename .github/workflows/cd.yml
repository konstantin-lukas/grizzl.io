name: CD

on:
    workflow_run:
        workflows: ["CI"]
        types:
            - completed

concurrency:
    group: ${{ github.workflow }}

jobs:
    deploy:
        if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main' }}
        runs-on: ubuntu-latest
        environment: production
        steps:
            - name: Print deploy info
              run: echo "Deploying version from tag ${{ github.event.workflow_run.head_branch }}"

            - name: Execute remote SSH commands using SSH key
              uses: appleboy/ssh-action@v1
              env:
                  BETTER_AUTH_SECRET: ${{ secrets.BETTER_AUTH_SECRET }}
                  BETTER_AUTH_URL: ${{ secrets.BETTER_AUTH_URL }}
                  DB_HOST: ${{ secrets.DB_HOST }}
                  DB_NAME: ${{ secrets.DB_NAME }}
                  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
                  DB_USERNAME: ${{ secrets.DB_USERNAME }}
                  OAUTH_DISCORD_ID: ${{ secrets.OAUTH_DISCORD_ID }}
                  OAUTH_DISCORD_SECRET: ${{ secrets.OAUTH_DISCORD_SECRET }}
                  OAUTH_GITHUB_ID: ${{ secrets.OAUTH_GITHUB_ID }}
                  OAUTH_GITHUB_SECRET: ${{ secrets.OAUTH_GITHUB_SECRET }}
                  OAUTH_REDDIT_ID: ${{ secrets.OAUTH_REDDIT_ID }}
                  OAUTH_REDDIT_SECRET: ${{ secrets.OAUTH_REDDIT_SECRET }}
                  OAUTH_TWITCH_ID: ${{ secrets.OAUTH_TWITCH_ID }}
                  OAUTH_TWITCH_SECRET: ${{ secrets.OAUTH_TWITCH_SECRET }}
                  POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
                  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
                  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
                  NUXT_PUBLIC_APP_ENV: ${{ vars.NUXT_PUBLIC_APP_ENV }}
                  NUXT_PUBLIC_LEGAL_EMAIL: ${{ vars.NUXT_PUBLIC_LEGAL_EMAIL }}
                  NUXT_PUBLIC_LEGAL_PHONE: ${{ vars.NUXT_PUBLIC_LEGAL_PHONE }}
                  NUXT_PUBLIC_LEGAL_RESPONSIBLE_ENTITY: ${{ vars.NUXT_PUBLIC_LEGAL_RESPONSIBLE_ENTITY }}
                  NUXT_PUBLIC_LEGAL_STREET: ${{ vars.NUXT_PUBLIC_LEGAL_STREET }}
                  NUXT_PUBLIC_LEGAL_ZIP_AND_CITY: ${{ vars.NUXT_PUBLIC_LEGAL_ZIP_AND_CITY }}
              with:
                  host: ${{ secrets.VPS_HOST }}
                  username: ${{ secrets.VPS_USER }}
                  password: ${{ secrets.VPS_PASSWORD }}
                  port: ${{ secrets.VPS_PORT }}
                  envs:
                      BETTER_AUTH_SECRET,BETTER_AUTH_URL,DB_HOST,DB_NAME,DB_PASSWORD,DB_USERNAME,OAUTH_DISCORD_ID,
                      OAUTH_DISCORD_SECRET,OAUTH_GITHUB_ID,OAUTH_GITHUB_SECRET,OAUTH_REDDIT_ID,OAUTH_REDDIT_SECRET,
                      OAUTH_TWITCH_ID,OAUTH_TWITCH_SECRET,POSTGRES_DB,POSTGRES_PASSWORD,POSTGRES_USER,NUXT_PUBLIC_APP_ENV,
                      NUXT_PUBLIC_LEGAL_EMAIL,NUXT_PUBLIC_LEGAL_PHONE,NUXT_PUBLIC_LEGAL_RESPONSIBLE_ENTITY,
                      NUXT_PUBLIC_LEGAL_STREET,NUXT_PUBLIC_LEGAL_ZIP_AND_CITY
                  script: |
                      cd /home/${{ secrets.VPS_USER }}/git/grizzl.io
                      git checkout main
                      git pull
                      docker compose -f compose.production.yml up -d --build
