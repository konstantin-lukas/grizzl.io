name: CI

on:
    pull_request:
        branches: [main]
    push:
        branches: [main]
        tags:
            - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
    build-and-cache-docker:
        runs-on: ubuntu-latest
        outputs:
            cache-hit: ${{ steps.docker-cache.outputs.cache-hit }}
        steps:
            - uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Cache Docker layers
              id: docker-cache
              uses: actions/cache@v4
              with:
                  path: /tmp/.buildx-cache
                  key: ${{ runner.os }}-buildx-${{ hashFiles('compose.test.yml') }}
                  restore-keys: |
                      ${{ runner.os }}-buildx-

            - name: Build Docker images from compose.test.yml
              run: |
                  docker compose -f compose.test.yml build --build-arg BUILDKIT_INLINE_CACHE=1 --progress plain
              env:
                  DOCKER_BUILDKIT: 1

            - name: Save built images to cache
              run: |
                  mkdir -p /tmp/.buildx-cache
                  docker save $(docker compose -f compose.test.yml config --services | xargs -I {} docker compose -f compose.test.yml images -q {}) -o /tmp/.buildx-cache/docker-images.tar

    code-quality:
        needs: build-and-cache-docker
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Restore Docker cache
              uses: actions/cache@v4
              with:
                  path: /tmp/.buildx-cache
                  key: ${{ runner.os }}-buildx-${{ hashFiles('compose.test.yml') }}
                  restore-keys: |
                      ${{ runner.os }}-buildx-

            - name: Load cached Docker images
              run: |
                  if [ -f /tmp/.buildx-cache/docker-images.tar ]; then
                    docker load -i /tmp/.buildx-cache/docker-images.tar
                  fi

            - name: Start containers
              run: docker compose -f compose.test.yml up -d

            - name: Run Prettier Check
              run: docker compose exec -T webserver npm run prettier

            - name: Run ESLint Check
              run: docker compose exec -T webserver npm run eslint

            - name: Perform Typecheck
              run: docker compose exec -T webserver npx nuxt typecheck

    unit-tests:
        needs: build-and-cache-docker
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Restore Docker cache
              uses: actions/cache@v4
              with:
                  path: /tmp/.buildx-cache
                  key: ${{ runner.os }}-buildx-${{ hashFiles('compose.test.yml') }}
                  restore-keys: |
                      ${{ runner.os }}-buildx-

            - name: Load cached Docker images
              run: |
                  if [ -f /tmp/.buildx-cache/docker-images.tar ]; then
                    docker load -i /tmp/.buildx-cache/docker-images.tar
                  fi

            - name: Start containers
              run: docker compose -f compose.test.yml up -d

            - name: Run Unit Tests inside webserver
              run: docker compose exec -T webserver vitest --run unit/

    e2e-tests:
        needs: build-and-cache-docker
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Restore Docker cache
              uses: actions/cache@v4
              with:
                  path: /tmp/.buildx-cache
                  key: ${{ runner.os }}-buildx-${{ hashFiles('compose.test.yml') }}
                  restore-keys: |
                      ${{ runner.os }}-buildx-

            - name: Load cached Docker images
              run: |
                  if [ -f /tmp/.buildx-cache/docker-images.tar ]; then
                    docker load -i /tmp/.buildx-cache/docker-images.tar
                  fi

            - name: Start Containers
              run: docker compose -f compose.test.yml up -d

            - name: Run end-to-end tests
              run: docker compose run --rm playwright npx playwright test
